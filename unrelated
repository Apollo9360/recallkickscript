if not game:IsLoaded() then
    game.Loaded:Wait()
end

game:GetService("GuiService"):ClearError()

local OrionLib = loadstring(game:HttpGet(("https://raw.githubusercontent.com/Giangplay/Script/main/Orion_Library_PE_V2.lua")))()
local GameName = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name
if game.PlaceId == 14339696091 then
local Window = OrionLib:MakeWindow({IntroText = "Loading", IntroIcon = "rbxassetid://15315284749",Name = ("Ultra Unfair".." | ".. identifyexecutor()),IntroToggleIcon = "rbxassetid://7734091286", HidePremium = false, SaveConfig = false, IntroEnabled = true, ConfigFolder = "slap battles"})

if game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild("VelocityHandler") == nil then
local bv = Instance.new("BodyVelocity")
bv.Name = "VelocityHandler"
bv.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
bv.MaxForce = Vector3.new(0,0,0)
bv.Velocity = Vector3.new(0,0,0)
end

if game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild("GyroHandler") == nil then
local bg = Instance.new("BodyGyro")
bg.Name = "GyroHandler"
bg.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
bg.MaxTorque = Vector3.new(0,0,0)
bg.P = 1000
bg.D = 50
end

game:GetService("Players").LocalPlayer.CharacterAdded:Connect(function(NewChar)
local bv = Instance.new("BodyVelocity")
bv.Name = "VelocityHandler"
bv.Parent = NewChar:WaitForChild("Humanoid").RootPart
bv.MaxForce = Vector3.new(0,0,0)
bv.Velocity = Vector3.new(0,0,0)

local bg = Instance.new("BodyGyro")
bg.Name = "GyroHandler"
bg.Parent = NewChar:WaitForChild("Humanoid").RootPart
bg.MaxTorque = Vector3.new(0,0,0)
bg.P = 1000
bg.D = 50
end)

local Tab = Window:MakeTab({
	Name = "Info",
	Icon = "rbxassetid://7734053426",
	PremiumOnly = false
})

local Tab1 = Window:MakeTab({
	Name = "Script",
	Icon = "rbxassetid://8997387937",
	PremiumOnly = false
})

local Tab2 = Window:MakeTab({
	Name = "hi",
	Icon = "rbxassetid://7734056608",
	PremiumOnly = false
})

local Tab3 = Window:MakeTab({
	Name = "hi",
	Icon = "rbxassetid://7733673987",
	PremiumOnly = false
})

Tab:AddLabel("hi")
Tab:AddLabel("Droopy Snoopy")
local InfoServer = Tab:AddSection({Name = "Info"})
CanYouFps = Tab:AddLabel("Your Fps [ "..math.floor(workspace:GetRealPhysicsFPS()).." ]")
CanYouPing = Tab:AddLabel("Your Ping [ "..game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString().." ]")
ServerPlayer = Tab:AddLabel("Player In Server [ "..#game.Players:GetPlayers().." / "..game.Players.MaxPlayers.." ]")
TimeServer = Tab:AddLabel("Server Time [ "..math.floor(workspace.DistributedGameTime / 60 / 60).." Hour | "..math.floor(workspace.DistributedGameTime / 60) - (math.floor(workspace.DistributedGameTime / 60 / 60) * 60).." Minute | "..math.floor(workspace.DistributedGameTime) - (math.floor(workspace.DistributedGameTime / 60) * 60).." Second ]")
TimeNow = Tab:AddLabel("Now Time [ "..os.date("%X").." ]")
AgeAccYou = Tab:AddLabel("You Account Age [ "..game.Players.LocalPlayer.AccountAge.." ]")
if game.Players.LocalPlayer.Character.Humanoid.Health == 0 then
ResetTime = Tab:AddLabel("Time Spawn [ "..game.Players.RespawnTime.." ]")
else
ResetTime = Tab:AddLabel("Time Spawn [ Not Dead ]")
end
Tab:AddParagraph("Game's ID [ "..game.PlaceId.." ]","Server ID [ "..game.JobId.." ]")
local InfoServer = Tab:AddSection({Name = "Local Player"})
if game.Players.LocalPlayer.Character:FindFirstChild("rock") then
WalkspeedYou = Tab:AddLabel("Walk Speed [ Not Walk then rock ]")
JumppowerYou = Tab:AddLabel("Jump Power [ Not Jump Power then rock ]")
HealthYou = Tab:AddLabel("Health You [ Not Health then rock ]")
HipHeightYou = Tab:AddLabel("Hip Height [ Not Hip then rock ]")
else
WalkspeedYou = Tab:AddLabel("Walk Speed [ "..game.Players.LocalPlayer.Character.Humanoid.WalkSpeed.." ]")
JumppowerYou = Tab:AddLabel("Jump Power [ "..game.Players.LocalPlayer.Character.Humanoid.JumpPower.." ]")
HealthYou = Tab:AddLabel("Health You [ "..game.Players.LocalPlayer.Character.Humanoid.Health.." ]")
HipHeightYou = Tab:AddLabel("Hip Height [ "..game.Players.LocalPlayer.Character.Humanoid.HipHeight.." ]")
end
GravityYou = Tab:AddLabel("Gravity [ "..game.Workspace.Gravity.." ]")
PositionYou = Tab:AddLabel("Position In Your [ "..tostring(math.round(game.Players.LocalPlayer.Character.HumanoidRootPart.Position.X)..", ".. math.round(game.Players.LocalPlayer.Character.HumanoidRootPart.Position.Y)..", "..math.round(game.Players.LocalPlayer.Character.HumanoidRootPart.Position.Z)).." ]")

Tab:AddToggle({
	Name = "Auto Set Info",
	Default = true,
	Callback = function(Value)
_G.AutoSetInfo = Value
game:GetService("RunService").RenderStepped:Connect(function()
if _G.AutoSetInfo then
CanYouFps:Set("Your Fps [ "..math.floor(workspace:GetRealPhysicsFPS()).." ]")
ServerPlayer:Set("Player In Server [ "..#game.Players:GetPlayers().." / "..game.Players.MaxPlayers.." ]")
TimeServer:Set("Server Time [ "..math.floor(workspace.DistributedGameTime / 60 / 60).." Hour | "..math.floor(workspace.DistributedGameTime / 60) - (math.floor(workspace.DistributedGameTime / 60 / 60) * 60).." Minutes | "..math.floor(workspace.DistributedGameTime) - (math.floor(workspace.DistributedGameTime / 60) * 60).." Second ]")
CanYouPing:Set("Your Ping [ "..game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString().." ]")
AgeAccYou:Set("Your Account Age [ "..game.Players.LocalPlayer.AccountAge.." ]")
TimeNow:Set("Now Time [ "..os.date("%X").." ]")
if game.Players.LocalPlayer.Character.Humanoid.Health == 0 then
ResetTime:Set("Time Spawn [ "..game.Players.RespawnTime.." ]")
else
ResetTime:Set("Time Spawn [ Not Dead ]")
end
PositionYou:Set("Position In You [ "..tostring(math.round(game.Players.LocalPlayer.Character.HumanoidRootPart.Position.X)..", ".. math.round(game.Players.LocalPlayer.Character.HumanoidRootPart.Position.Y)..", "..math.round(game.Players.LocalPlayer.Character.HumanoidRootPart.Position.Z)).." ]")
if game.Players.LocalPlayer.Character:FindFirstChild("rock") then
WalkspeedYou:Set("Walk Speed [ Not Walk then rock ]")
JumppowerYou:Set("Jump Power [ Not Jump Power then rock ]")
HealthYou:Set("Health You [ Not Health then rock ]")
HipHeightYou:Set("Hip Height [ Not Hip then rock ]")
else
WalkspeedYou:Set("Walk Speed [ "..game.Players.LocalPlayer.Character.Humanoid.WalkSpeed.." ]")
JumppowerYou:Set("Jump Power [ "..game.Players.LocalPlayer.Character.Humanoid.JumpPower.." ]")
HealthYou:Set("Health You [ "..game.Players.LocalPlayer.Character.Humanoid.Health.." ]")
HipHeightYou:Set("Hip Height [ "..game.Players.LocalPlayer.Character.Humanoid.HipHeight.." ]")
end
GravityYou:Set("Gravity [ "..game.Workspace.Gravity.." ]")
end
end)
end    
})


Tab1:AddToggle({
	Name = "Flame Aura",
	Default = false,
	Callback = function(Value)
FlameAura = Value
while FlameAura do
local args = {[1] = "Flame Charade", [2] = workspace.Cripple.Humanoid, [3] = 0, [4] = {["Charge"] = 1}}
game:GetService("ReplicatedStorage").Damage:FireServer(unpack(args))
local args = {[1] = "Flame Charade", [2] = workspace.Crail.Humanoid, [3] = 0, [4] = {["Charge"] = 1}}
game:GetService("ReplicatedStorage").Damage:FireServer(unpack(args))
local args = {[1] = "Flame Charade", [2] = workspace.Blyke.Humanoid, [3] = 0, [4] = {["Charge"] = 1}}
game:GetService("ReplicatedStorage").Damage:FireServer(unpack(args))
local args = {[1] = "Flame Charade", [2] = workspace.Isen.Humanoid, [3] = 0, [4] = {["Charge"] = 1}}
game:GetService("ReplicatedStorage").Damage:FireServer(unpack(args))
local args = {[1] = "Flame Charade", [2] = workspace.Remi.Humanoid, [3] = 0, [4] = {["Charge"] = 1}}
game:GetService("ReplicatedStorage").Damage:FireServer(unpack(args))
local args = {[1] = "Flame Charade", [2] = workspace.Zeke.Humanoid, [3] = 0, [4] = {["Charge"] = 1}}
game:GetService("ReplicatedStorage").Damage:FireServer(unpack(args))
local args = {[1] = "Flame Charade", [2] = workspace.Seraphina.Humanoid, [3] = 0, [4] = {["Charge"] = 1}}
game:GetService("ReplicatedStorage").Damage:FireServer(unpack(args))
local args = {[1] = "Flame Charade", [2] = workspace.Arlo.Humanoid, [3] = 0, [4] = {["Charge"] = 1}}
game:GetService("ReplicatedStorage").Damage:FireServer(unpack(args))
local args = {[1] = "Flame Charade", [2] = workspace.John.Humanoid, [3] = 0, [4] = {["Charge"] = 1}}
game:GetService("ReplicatedStorage").Damage:FireServer(unpack(args))
local args = {[1] = "Flame Charade", [2] = workspace.Seer.Humanoid, [3] = 0, [4] = {["Charge"] = 1}}
game:GetService("ReplicatedStorage").Damage:FireServer(unpack(args))
local args = {[1] = "Flame Charade", [2] = workspace.Thunderclap.Humanoid, [3] = 0, [4] = {["Charge"] = 1}}
game:GetService("ReplicatedStorage").Damage:FireServer(unpack(args))
local args = {[1] = "Flame Charade", [2] = workspace.Roku.Humanoid, [3] = 0, [4] = {["Charge"] = 1}}
game:GetService("ReplicatedStorage").Damage:FireServer(unpack(args))
local args = {[1] = "Flame Charade", [2] = workspace.Cultist.Humanoid, [3] = 0, [4] = {["Charge"] = 1}}
game:GetService("ReplicatedStorage").Damage:FireServer(unpack(args))
local args = {[1] = "Flame Charade", [2] = workspace.Otherworlders.Humanoid, [3] = 0, [4] = {["Charge"] = 1}}
game:GetService("ReplicatedStorage").Damage:FireServer(unpack(args))
local args = {[1] = "Flame Charade", [2] = workspace.God.Humanoid, [3] = 0, [4] = {["Charge"] = 1}}
game:GetService("ReplicatedStorage").Damage:FireServer(unpack(args))
wait(0.1)
end
	end    
})

Tab1:AddToggle({
	Name = "Arbiter Aura",
	Default = false,
	Callback = function(Value)
ArbAura = Value
while ArbAura do
local args = {
    [1] = "Dark Blade",
    [2] = workspace.Cripple.Humanoid,
}

game:GetService("ReplicatedStorage").Damage:FireServer(unpack(args))
wait(0.1)
end
	end    
})
Tab2:AddSlider({
	Name = "WalkSpeed",
	Min = 20,
	Max = 100,
	Default = 20,
	Color = Color3.fromRGB(255,255,255),
	Increment = 1,
	ValueName = "WalkSpeed",
	Callback = function(Value)
game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
Walkspeed = Value
	end    
})

Tab2:AddToggle({
	Name = "Walkspeed Set Auto",
	Default = false,
	Callback = function(Value)
		KeepWalkspeed = Value
            while KeepWalkspeed do
                if game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") ~= nil and game.Players.LocalPlayer.Character.Humanoid.WalkSpeed ~= Walkspeed then
                    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Walkspeed
                end
task.wait()
            end
	end    
})

Tab2:AddSlider({
	Name = "JumpPower",
	Min = 50,
	Max = 100,
	Default = 50,
	Color = Color3.fromRGB(255,255,255),
	Increment = 1,
	ValueName = "JumpPower",
	Callback = function(Value)
game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value
Jumppower = Value
	end    
})

Tab2:AddToggle({
	Name = "Jumppower Set Auto",
	Default = false,
	Callback = function(Value)
		KeepJumppower = Value
            while KeepJumppower do
                if game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") ~= nil and game.Players.LocalPlayer.Character.Humanoid.JumpPower ~= Jumppower then
                    game.Players.LocalPlayer.Character.Humanoid.JumpPower = Jumppower
                end
task.wait()
            end
	end    
})

Tab2:AddSlider({
	Name = "Hip Height",
	Min = 0,
	Max = 100,
	Default = 2,
	Color = Color3.fromRGB(255,255,255),
	Increment = 1,
	ValueName = "Hip Height",
	Callback = function(Value)
game.Players.LocalPlayer.Character.Humanoid.HipHeight = Value
HipHeight = Value
	end    
})

Tab2:AddToggle({
	Name = "Hip Height Set Auto",
	Default = false,
	Callback = function(Value)
		KeepHipHeight = Value
           while KeepHipHeight do
              if game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") ~= nil and game.Players.LocalPlayer.Character.Humanoid.HipHeight ~= HipHeight then
                  game.Players.LocalPlayer.Character.Humanoid.HipHeight  = HipHeight
              end
task.wait()
         end
	end    
})

Tab2:AddSlider({
	Name = "Gravity",
	Min = 0,
	Max = 600,
	Default = 196,
	Color = Color3.fromRGB(255,255,255),
	Increment = 1,
	ValueName = "Gravity",
	Callback = function(Value)
game.Workspace.Gravity = Value
Gravity = Value
	end    
})

Tab2:AddToggle({
	Name = "Gravity Set Auto",
	Default = false,
	Callback = function(Value)
		KeepGravity = Value
           while KeepGravity do
              if game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") ~= nil and game.Workspace.Gravity ~= nil and game.Workspace.Gravity ~= Gravity then
                  game.Workspace.Gravity = Gravity
              end
task.wait()
         end
	end    
})
Tab2:AddToggle({
	Name = "Healing",
	Default = false,
	Callback = function(Value)
		HealOn = Value
while HealOn do
local args = {
    [1] = game:GetService("Players").LocalPlayer.Character
}

game:GetService("ReplicatedStorage").SkillRemotes.Heal:FireServer(unpack(args))
wait(0.1)
end
end
})
Tab2:AddButton({
	Name = "Power Up",
	Callback = function()
local args = {
    [1] = true
}
game:GetService("ReplicatedStorage").ToggleAbility:InvokeServer(unpack(args))
  	end    
})
Tab2:AddButton({
	Name = "phase shift",
	Callback = function()
local args = {
    [1] = "Shift Phase",
    [2] = 1719279860,
    [3] = Vector3.new(1, 1, 1),
    [4] = 22
}

game:GetService("ReplicatedStorage").Charge:FireServer(unpack(args))
local args = {
    [1] = "Shift Phase",
    [2] = {
        ["Mousepos"] = Vector3.new(1, 1, 1),
        ["Charge"] = 0
    },
    [3] = 0
}

game:GetService("ReplicatedStorage").Cast:FireServer(unpack(args))

  	end    
})
Tab2:AddButton({
	Name = "swap test",
	Callback = function()
local args = {
    [1] = "929347417"
}

game:GetService("ReplicatedStorage").SwapAbility:FireServer(unpack(args))
  	end    
})


Tab3:AddSlider({
	Name = "Amount",
	Min = 1,
	Max = 100,
	Default = 196,
	Color = Color3.fromRGB(255,255,255),
	Increment = 1,
	ValueName = "stuffzzz",
	Callback = function(Value)
stuffzzz = Value
end    
})

Tab3:AddButton({
	Name = "Get Fist",
	Callback = function()
for i = 1, stuffzzz do
local args = {
    [1] = "Fist"
}
game:GetService("ReplicatedStorage").RollGear:InvokeServer(unpack(args))
end
  	end    
})
Tab3:AddButton({
	Name = "Get Style",
	Callback = function()
for i = 1, stuffzzz do
local args = {
    [1] = "Relic"
}
game:GetService("ReplicatedStorage").RollGear:InvokeServer(unpack(args))
end
  	end    
})
Tab3:AddTextbox({
	Name = "playertoluck1",
	Default = "",
	TextDisappear = false,
	Callback = function(Value)
local name1abv = Value
local targetPlayer1
for _, v in pairs(game.Players:GetPlayers()) do
if string.sub(v.Name, 1, #targetAbbreviation):lower() == targetAbbreviation:lower() then
targetPlayer1 = v
break
end
end
if targetPlayer1 then
name1 = targetPlayer1.Name
OrionLib:MakeNotification({Name = "Error",Content = "Found Player [ "..name1.." ]",Image = "rbxassetid://7733658504",Time = 5})
else
OrionLib:MakeNotification({Name = "Error",Content = "Can't find player",Image = "rbxassetid://7733658504",Time = 5})
end
	end	  
})
Tab3:AddTextbox({
	Name = "playertoluck2",
	Default = "",
	TextDisappear = false,
	Callback = function(Value)
local name2abv = Value
local targetPlayer2
for _, v in pairs(game.Players:GetPlayers()) do
if string.sub(v.Name, 1, #targetAbbreviation):lower() == targetAbbreviation:lower() then
targetPlayer2 = v
break
end
end
if targetPlayer2 then
name2 = targetPlayer2.Name
OrionLib:MakeNotification({Name = "Error",Content = "Found Player [ "..name2.." ]",Image = "rbxassetid://7733658504",Time = 5})
else
OrionLib:MakeNotification({Name = "Error",Content = "Can't find player",Image = "rbxassetid://7733658504",Time = 5})
end
	end	  
})
Tab3:AddTextbox({
	Name = "playertoluck3",
	Default = "",
	TextDisappear = false,
	Callback = function(Value)
local name3abv = Value
local targetPlayer3
for _, v in pairs(game.Players:GetPlayers()) do
if string.sub(v.Name, 1, #targetAbbreviation):lower() == targetAbbreviation:lower() then
targetPlayer3 = v
break
end
end
if targetPlayer3 then
name3 = targetPlayer3.Name
OrionLib:MakeNotification({Name = "Error",Content = "Found Player [ "..name3.." ]",Image = "rbxassetid://7733658504",Time = 5})
else
OrionLib:MakeNotification({Name = "Error",Content = "Can't find player",Image = "rbxassetid://7733658504",Time = 5})
end
	end	  
})
Tab3:AddTextbox({
	Name = "playertoluck4",
	Default = "",
	TextDisappear = false,
	Callback = function(Value)
local name4abv = Value
local targetPlayer4
for _, v in pairs(game.Players:GetPlayers()) do
if string.sub(v.Name, 1, #targetAbbreviation):lower() == targetAbbreviation:lower() then
targetPlayer4 = v
break
end
end
if targetPlayer4 then
name4 = targetPlayer4.Name
OrionLib:MakeNotification({Name = "Error",Content = "Found Player [ "..name4.." ]",Image = "rbxassetid://7733658504",Time = 5})
else
OrionLib:MakeNotification({Name = "Error",Content = "Can't find player",Image = "rbxassetid://7733658504",Time = 5})
end
	end	  
})
Tab3:AddTextbox({
	Name = "playertoluck5",
	Default = "",
	TextDisappear = false,
	Callback = function(Value)
local name5abv = Value
local targetPlayer5
for _, v in pairs(game.Players:GetPlayers()) do
if string.sub(v.Name, 1, #targetAbbreviation):lower() == targetAbbreviation:lower() then
targetPlayer5 = v
break
end
end
if targetPlayer5 then
name5 = targetPlayer5.Name
OrionLib:MakeNotification({Name = "Error",Content = "Found Player [ "..name5.." ]",Image = "rbxassetid://7733658504",Time = 5})
else
OrionLib:MakeNotification({Name = "Error",Content = "Can't find player",Image = "rbxassetid://7733658504",Time = 5})
end
	end	  
})
Tab3:AddTextbox({
	Name = "playertoluck6",
	Default = "",
	TextDisappear = false,
	Callback = function(Value)
local name6abv = Value
local targetPlayer6
for _, v in pairs(game.Players:GetPlayers()) do
if string.sub(v.Name, 1, #targetAbbreviation):lower() == targetAbbreviation:lower() then
targetPlayer6 = v
break
end
end
if targetPlayer6 then
name6 = targetPlayer6.Name
OrionLib:MakeNotification({Name = "Error",Content = "Found Player [ "..name6.." ]",Image = "rbxassetid://7733658504",Time = 5})
else
OrionLib:MakeNotification({Name = "Error",Content = "Can't find player",Image = "rbxassetid://7733658504",Time = 5})
end
	end	  
})
Tab3:AddTextbox({
	Name = "playertoluck7",
	Default = "",
	TextDisappear = false,
	Callback = function(Value)
local name7abv = Value
local targetPlayer7
for _, v in pairs(game.Players:GetPlayers()) do
if string.sub(v.Name, 1, #targetAbbreviation):lower() == targetAbbreviation:lower() then
targetPlayer7 = v
break
end
end
if targetPlayer7 then
name7 = targetPlayer7.Name
OrionLib:MakeNotification({Name = "Error",Content = "Found Player [ "..name7.." ]",Image = "rbxassetid://7733658504",Time = 5})
else
OrionLib:MakeNotification({Name = "Error",Content = "Can't find player",Image = "rbxassetid://7733658504",Time = 5})
end
	end	  
})
Tab3:AddTextbox({
	Name = "playertoluck8",
	Default = "",
	TextDisappear = false,
	Callback = function(Value)
local name8abv = Value
local targetPlayer8
for _, v in pairs(game.Players:GetPlayers()) do
if string.sub(v.Name, 1, #targetAbbreviation):lower() == targetAbbreviation:lower() then
targetPlayer8 = v
break
end
end
if targetPlayer8 then
name8 = targetPlayer8.Name
OrionLib:MakeNotification({Name = "Error",Content = "Found Player [ "..name8.." ]",Image = "rbxassetid://7733658504",Time = 5})
else
OrionLib:MakeNotification({Name = "Error",Content = "Can't find player",Image = "rbxassetid://7733658504",Time = 5})
end
	end	  
})
Tab3:AddTextbox({
	Name = "playertoluck9",
	Default = "",
	TextDisappear = false,
	Callback = function(Value)
local name9abv = Value
local targetPlayer9
for _, v in pairs(game.Players:GetPlayers()) do
if string.sub(v.Name, 1, #targetAbbreviation):lower() == targetAbbreviation:lower() then
targetPlayer9 = v
break
end
end
if targetPlayer9 then
name9 = targetPlayer9.Name
OrionLib:MakeNotification({Name = "Error",Content = "Found Player [ "..name9.." ]",Image = "rbxassetid://7733658504",Time = 5})
else
OrionLib:MakeNotification({Name = "Error",Content = "Can't find player",Image = "rbxassetid://7733658504",Time = 5})
end
	end	  
})
Tab3:AddTextbox({
	Name = "playertoluck10",
	Default = "",
	TextDisappear = false,
	Callback = function(Value)
local name10abv = Value
local targetPlayer10
for _, v in pairs(game.Players:GetPlayers()) do
if string.sub(v.Name, 1, #targetAbbreviation):lower() == targetAbbreviation:lower() then
targetPlayer10 = v
break
end
end
if targetPlayer10 then
name10 = targetPlayer10.Name
OrionLib:MakeNotification({Name = "Error",Content = "Found Player [ "..name10.." ]",Image = "rbxassetid://7733658504",Time = 5})
else
OrionLib:MakeNotification({Name = "Error",Content = "Can't find player",Image = "rbxassetid://7733658504",Time = 5})
end
	end	  
})
Tab3:AddTextbox({
	Name = "playertoluck11",
	Default = "",
	TextDisappear = false,
	Callback = function(Value)
local name11abv = Value
local targetPlayer11
for _, v in pairs(game.Players:GetPlayers()) do
if string.sub(v.Name, 1, #targetAbbreviation):lower() == targetAbbreviation:lower() then
targetPlayer11 = v
break
end
end
if targetPlayer11 then
name11 = targetPlayer11.Name
OrionLib:MakeNotification({Name = "Error",Content = "Found Player [ "..name11.." ]",Image = "rbxassetid://7733658504",Time = 5})
else
OrionLib:MakeNotification({Name = "Error",Content = "Can't find player",Image = "rbxassetid://7733658504",Time = 5})
end
	end	  
})
Tab3:AddTextbox({
	Name = "playertoluck12",
	Default = "",
	TextDisappear = false,
	Callback = function(Value)
local name12abv = Value
local targetPlayer12
for _, v in pairs(game.Players:GetPlayers()) do
if string.sub(v.Name, 1, #targetAbbreviation):lower() == targetAbbreviation:lower() then
targetPlayer12 = v
break
end
end
if targetPlayer12 then
name12 = targetPlayer12.Name
OrionLib:MakeNotification({Name = "Error",Content = "Found Player [ "..name12.." ]",Image = "rbxassetid://7733658504",Time = 5})
else
OrionLib:MakeNotification({Name = "Error",Content = "Can't find player",Image = "rbxassetid://7733658504",Time = 5})
end
	end	  
})
Tab3:AddTextbox({
	Name = "playertoluck13",
	Default = "",
	TextDisappear = false,
	Callback = function(Value)
local name13abv = Value
local targetPlayer13
for _, v in pairs(game.Players:GetPlayers()) do
if string.sub(v.Name, 1, #targetAbbreviation):lower() == targetAbbreviation:lower() then
targetPlayer13 = v
break
end
end
if targetPlayer13 then
name13 = targetPlayer13.Name
OrionLib:MakeNotification({Name = "Error",Content = "Found Player [ "..name13.." ]",Image = "rbxassetid://7733658504",Time = 5})
else
OrionLib:MakeNotification({Name = "Error",Content = "Can't find player",Image = "rbxassetid://7733658504",Time = 5})
end
	end	  
})
Tab3:AddToggle({
	Name = "Luck",
	Default = false,
	Callback = function(Value)
		luckboosterthing = Value
            while luckboosterthing do
                local args = {
                    [1] = "Self Gamble",
                    [2] = {
                        ["Color"] = Color3.new(1, 0.8509804010391235, 0.30980393290519714),
                        ["Boost"] = "Ultra Lucky"
                    }
                }
                game:GetService("ReplicatedStorage").Remotes.SkillCast:FireServer(unpack(args))
		        local args = {
                    [1] = "Group Gamble",
                    [2] = {
                        ["Color"] = Color3.new(1, 0.8509804010391235, 0.30980393290519714),
                        ["Boost"] = "Super Lucky",
                        ["HitPlayers"] = {
                            [1] = name1.Name,
			    [2] = name2.Name,
                            [3] = name3.Name,
			    [4] = name4.Name,
                            [5] = name5.Name,
			    [6] = name6.Name,
                            [7] = name7.Name,
			    [8] = name8.Name,
                            [9] = name9.Name,
			    [10] = name10.Name,
                            [11] = name11.Name,
			    [12] = name12.Name,
			    [13] = name13.Name
                        }
			}
                }
                game:GetService("ReplicatedStorage").Remotes.SkillCast:FireServer(unpack(args))
print(args)
		task.wait(1)
            end
	end    
})
Tab3:AddButton({
	Name = "Mass Ugr Fist",
	Callback = function()
massUpgrade("Fist", true, 10)
  	end    
})
Tab3:AddButton({
	Name = "Mass Ugr Style",
	Callback = function()
massUpgrade("Style", true, 10)
  	end    
})
local function massUpgrade(type, ignoreUpgraded, threshold)
    spawn(function()
        local validMaterials = {}

        local data = {}
        if type == "Fist" then
            data = getUserData().Fists
        else
            data = getUserData().Relics
        end

        for id, fields in data do
            if(ignoreUpgraded and fields.BaseLevel ~= fields.Level) then 
                continue 
            end
            if fields.Level <= threshold then
                table.insert(validMaterials, id)
            end
        end

        while #validMaterials >= 4 do
            local args = {
                [1] = type,
                [2] = {
                    [1] = table.remove(validMaterials),
                    [2] = table.remove(validMaterials),
                    [3] = table.remove(validMaterials),
                    [4] = table.remove(validMaterials),
                }
            }
            game:GetService("ReplicatedStorage").Remotes.UpgradeItem:InvokeServer(unpack(args))
        end
    end)
end

end
